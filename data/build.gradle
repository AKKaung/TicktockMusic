apply plugin: 'com.android.library'

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]
        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
    }

    publishNonDefault true

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def testDependencies = rootProject.ext.testDependencies
    def dataDependencies = rootProject.ext.dataDependencies
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation testDependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    api project(':domain')
    api dataDependencies.rxJava
    api dataDependencies.dagger
    annotationProcessor dataDependencies.daggerCompiler
    api dataDependencies.okHttp
    api dataDependencies.okHttpInterceptor
    api dataDependencies.gson
    api dataDependencies.retrofit
    api dataDependencies.gsonConverter
    api dataDependencies.rxJava2Adapter
    api dataDependencies.javaxInject
    api dataDependencies.androidAnnotations
    api dataDependencies.log
    testImplementation testDependencies.junit
}
